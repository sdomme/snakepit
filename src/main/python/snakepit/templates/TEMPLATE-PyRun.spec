# do not create debug-packages
%define debug_package %{nil}

# deactivcate python bytecompiling
%global __os_install_post %(echo '%{__os_install_post}' | sed -e 's!/usr/lib[^[:space:]]*/brp-python-bytecompile[[:space:]].*$!!g')

Name:          {{ pypi_package_name }}
Version:       {{ pypi_package_version }}
Release:       {{ build }}
Summary:       {{ pypi_package_summary }} (EXPERIMENTAL SNAKEPIT STANDALONE)
Group:         Development/Tools
License:       {{ pypi_package_licence }}
BuildRoot:     %{_tmppath}/%{name}-%{version}-root
BuildRequires: /bin/bash curl sqlite-devel bzip2-devel openssl-devel zlib-devel
AutoReqProv:   no

%description
{{ pypi_package_name }} via PyRun generated by snakepit (EXPERIMENTAL)

%build

%install
# create pyrun build directory
install -m 755 -d pyrun
# create /opt/{{ pypi_package_name }} in buildroot
install -m 755 -d %{buildroot}/opt/{{ pypi_package_name }}
# Build PyRun
curl -s https://downloads.egenix.com/python/egenix-pyrun-{{ pyrun_dist_version }}.tar.gz | tar xz -C pyrun --strip-components 1
make -C pyrun/PyRun install PYTHONFULLVERSION={{ pyrun_pythonfullversion }} PREFIX=%{buildroot}/opt/gaius
# install setuptools
install -m 755 -d setuptools
curl -s https://pypi.python.org/packages/source/s/setuptools/{{ setuptools }} | tar xz -C setuptools --strip-components 1
cd setuptools && %{buildroot}/opt/gaius/bin/{{ interpreter }} setup.py install && cd -
# install pip
install -m 755 -d pip
curl -s https://pypi.python.org/packages/source/p/pip/{{ pip }} | tar xz -C pip --strip-components 1
cd pip && %{buildroot}/opt/gaius/bin/{{ interpreter }} setup.py install && cd -
# change to BuildRoot
cd %{buildroot}
# use pip to install {{ pypi_package_name }} 
opt/{{ pypi_package_name }}/bin/pip install {{ extra_pip_args }} --no-compile {{ "--index %s" % pypi_index if pypi_index else '' }} --global-option build_scripts --global-option "--executable=/opt/{{ pypi_package_name }}/bin/python" {{ pypi_package_name }}=={{ pypi_package_version }}
#cleanup
opt/{{ pypi_package_name }}/bin/pip uninstall pip setuptools -y --disable-pip-version-check

# create a /usr/bin
install -m 755 -d %{buildroot}/usr/bin
# do all the symlinks
{% for item in symlinks %}
ln -s /opt/{{ pypi_package_name }}/bin/{{ item }} %{buildroot}/usr/bin
{% endfor %}

%clean
# remove the result of the build step
rm -rf %{buildroot}

%files
%defattr(-,root,root,-)
/opt/{{ pypi_package_name }}
{% for item in symlinks %}
/usr/bin/{{ item }}
{% endfor %}

%post
